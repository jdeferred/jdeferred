/*
 * Copyright 2013-2017 Ray Tsang
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java'
apply plugin: 'osgi'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'org.kordamp.gradle.clirr'

tasks.withType(JavaCompile) {
    sourceCompatibility = JavaVersion.VERSION_1_6
    targetCompatibility = JavaVersion.VERSION_1_6
}

dependencies {
    compile "org.slf4j:slf4j-api:$slf4jVersion"
    testCompile "junit:junit:$junitVersion"
    testCompile "org.slf4j:slf4j-jdk14:$slf4jVersion"
    testCompile "org.awaitility:awaitility:$awaitilityVersion"
    testCompile "pl.pragmatists:JUnitParams:$JUnitParamsVersion"
}

task sourcesJar(type: Jar) {
    group 'Build'
    description 'An archive of the source code'
    classifier 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    group 'Build'
    description 'An archive of the Javadocs'
    classifier 'javadoc'
    from javadoc.destinationDir
}

apply from: rootProject.file('gradle/pom.gradle')
apply from: rootProject.file('gradle/code-quality.gradle')
apply from: rootProject.file('gradle/code-coverage.gradle')

jar {
    manifest {
        attributes(
            'Built-By':               buildBy,
            'Created-By':             buildCreatedBy,
            'Build-Date':             buildDate,
            'Build-Time':             buildTime,
            'Build-Revision':         buildRevision,
            'Specification-Title':    project.name,
            'Specification-Version':  project.version,
            'Implementation-Title':   project.name,
            'Implementation-Version': project.version,
            'Bundle-DocURL':          'http://jdeferred.org/',
            'Export-Package':         "${project.group}.*;version=${project.version};-split-package:=error".toString(),
            'Automatic-Module-Name':  'org.jdeferred2.core'
        )
    }
    metaInf {
        from(rootProject.files('.')) {
            include 'LICENSE*'
        }
    }
}

publishing {
    publications {
        mavenCustom(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom.withXml {
                // all dependencies should use the default scope (compile) but
                // Gradle insists in using runtime as default
                asNode().dependencies.dependency.each { dep ->
                    if (dep.scope.text() == 'runtime') {
                        dep.remove(dep.scope)
                    }
                }
                asNode().children().last() + pomConfig
                asNode().appendNode('description', project.project_description)
            }
        }
    }
}

bintray {
    user         = project.bintrayUsername
    key          = project.bintrayApiKey
    publications = ['mavenCustom']
    pkg {
        repo                  = project.project_bintray_repo
        userOrg               = project.project_bintray_org
        name                  = rootProject.name
        desc                  = rootProject.project_description
        licenses              = ['Apache-2.0']
        labels                = ['jdeferred', 'promise', 'android']
        websiteUrl            = project.project_url
        issueTrackerUrl       = project.project_issues
        vcsUrl                = project.project_scm
        publicDownloadNumbers = true
    }
}

tasks.findByName('clirr').dependsOn tasks.findByName('jar')
